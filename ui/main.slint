import { Button, ComboBox, TextEdit, Spinner } from "std-widgets.slint"; 
export enum SelectedWindow { select, freestyle, story, customlvl }

export component SelectionScreen {
    callback freestyleClick <=> fm.clicked;
    callback storyClick <=> sm.clicked;
    callback customClick <=> cl.clicked;
    Rectangle {
        VerticalLayout {
            width: 90%;
            height: 90%;
            alignment: end;
            Text {
                text: "Welcome to Prism Private Intelligence!";
                horizontal-alignment: center;
            }
            Text {
                text: "The Premier Learn-To-Code App utilizing Mediated Transfer!";
                horizontal-alignment: center;
                min-height: 50px;
                wrap: word-wrap;
            }
            HorizontalLayout {
                padding-top: 50px;
                height: 30%;
                fm := Button {
                    text: "Freestyle Mode";
                }
                sm := Button {
                    text: "Story Mode";
                }
                cl := Button {
                    text: "Custom Levels";
                }
            }
        }
    }
}

export component FreestyleScreen {
    in property <string> result: "Nothing yet";
    changed result => {
        spin.progress = 0%;
        spin.visible = false;
        spintime.running = false;
        result_text.text = result;
    }
    callback run_code(string);
    spintime := Timer {
        interval: 50ms;
        running: false;
        triggered => {
            spin.progress += spin.progress >= 100% ? -100% : 2%;
        }
    }
    Rectangle {
        VerticalLayout {
            width: 90%;
            editor := TextEdit {
                min-width: 300px;
                min-height: 300px;
                font-size: 14px;
                has-focus: true;

                text: "Write code here";
            }
            startbutton := Button {
                text: "Start";
                clicked => {
                    spintime.running = true;
                    spin.visible = true;
                    run_code(editor.text);
                }
            }
            result_text := Text {
                text: "Nothing yet";
            }
            spin := Spinner {
                visible: false;
                progress: 0%;
            }
        }

    }
}

export component CustomLevelScreen {
    Rectangle {
        Text { text: "Pretty custom yo"; }
    }
}

export component MainWindow inherits Window {
    property <SelectedWindow> windowToSelect: SelectedWindow.select;
    in property <string> freestyle_string <=> fs.result;
    callback run_freestyle_code <=> fs.run_code;
    ss := SelectionScreen {
        visible: windowToSelect == SelectedWindow.select ? true : false;
        freestyleClick => {
            windowToSelect = SelectedWindow.freestyle;
        }
        storyClick => {
            windowToSelect = SelectedWindow.story;
        }
        customClick => {
            windowToSelect = SelectedWindow.customlvl;
        }
    }
    fs := FreestyleScreen {
        visible: windowToSelect == SelectedWindow.freestyle ? true : false;
    }
    cs := CustomLevelScreen {
        visible: windowToSelect == SelectedWindow.customlvl ? true : false;
    }


}

